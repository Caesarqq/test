version: '3.8'

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq
    environment:
      - DB_NAME=demo
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=amqp://user:password@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - MAILGUN_API_KEY=
      - MAILGUN_DOMAIN=
      - DEFAULT_FROM_EMAIL=
      - SITE_URL=http://localhost:8000
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
      - rabbitmq
    environment:
      - DB_NAME=demo
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=amqp://user:password@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - MAILGUN_API_KEY=e63955b5a39a336be3f0df4301ffc489-e71583bb-2f1b1131
      - MAILGUN_DOMAIN=sandbox1338ebe362f74dc0808b64f36dceb60e.mailgun.org
      - DEFAULT_FROM_EMAIL=no-reply@charity-auction.com
      - SITE_URL=http://localhost:8000
    user: celery
    command: celery -A backend worker -l info

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery-beat
    volumes:
      - ./backend:/app
      - celerybeat_data:/app/celerybeat
    depends_on:
      - db
      - redis
      - backend
      - rabbitmq
    environment:
      - DB_NAME=demo
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - CELERY_BROKER_URL=amqp://user:password@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
    user: celery
    command: celery -A backend beat -l info -s /app/celerybeat/celerybeat-schedule

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      
  frontend-dev:
    image: node:18
    container_name: frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

volumes:
  db_data:
  redis_data:
  celerybeat_data:
